{"version":3,"file":"static/webpack/static/development/pages/_app.js.bc9f96eaafcddb5d3640.hot-update.js","sources":["webpack:///./reducer/cashFlowReducer.js"],"sourcesContent":["import * as types from '../action/types';\nimport CashFlowUtils from '../utils/cashFlowUtils';\nimport toast from 'react-hot-toast';\n\nexport const initialState = {\n  indexPlayer: 0,\n  players: [CashFlowUtils.jobs[0]],\n  number: 1,\n  selectingCard: 0,\n}\n\nfunction processCardCoHoi(curPlayer, payload) {\n  const { cardTitle, cardVal, luong, laiNganHang, laiCoPhan, thuNhapThuDong, tongThuNhap,\n  thue, traLaiVayMuaNha, traTienVayHoc, traTienVayMuaXe, traTienVayTinDung, chiPhiMuaSam, chiPhiKhac,\n  chiPhiNuoi1Con, soCon, chiPhiNuoiCon, vayNganHang, laiVayNganHang, khoanNoKhac,\n  tongChiPhi, dongTien,tuThien,\n  tienMat, batDongSans, congTys, chungKhoans, tienNoMuaNha, tongTienHocPhi, tienNoMuaXe, tienNoTheTinDung, tienNoMuaBanLe, noNganHang } = curPlayer;\n\n  const {type, gia, traTruoc, no, thuNhap, soPhong,symbol} = cardVal;\n  switch (type) {\n    case CashFlowUtils.cardType.typeChBds:\n      curPlayer.batDongSans.push(cardVal);\n      curPlayer.tienNoMuaNha += no;\n      curPlayer.tienMat -= traTruoc;\n      curPlayer.showCardResult = 0;\n      break;\n    case CashFlowUtils.cardType.typeChKdbtg:\n      curPlayer.congTys.push(cardVal);\n      curPlayer.tienMat -= traTruoc;\n      curPlayer.showCardResult = 0;\n      break;\n    case CashFlowUtils.cardType.typeChBdsLamHu:\n      curPlayer.showCardResult = 0;\n      if(curPlayer.batDongSans.length > 0)\n        curPlayer.tienMat -= traTruoc;\n      break;\n    case CashFlowUtils.cardType.typeChCoPhieuGia:\n      const {soluongcp} =  payload;\n      let giaMoi = 0;\n      if(soluongcp*gia > curPlayer.tienMat){\n        toast.error('Số dư tiền mặt không đủ mua, cần giảm số lượng cổ phiếu.');\n        curPlayer.showCardResult = 1;\n        break;\n      } else {\n        curPlayer.showCardResult = 0;\n        for(var i =0; i< curPlayer.chungKhoans.length;i++){\n          if(curPlayer.chungKhoans[i].symbol === symbol) {\n            curPlayer.tienMat -= soluongcp*gia;\n            giaMoi = (soluongcp* gia + curPlayer.chungKhoans[i].gia*curPlayer.chungKhoans[i].soLuong)/(soluongcp +curPlayer.chungKhoans[i].soLuong);\n            curPlayer.chungKhoans[i] = {symbol, gia:giaMoi, soLuong:soluongcp+curPlayer.chungKhoans[i].soLuong};\n          }\n        }\n        if(giaMoi===0)      \n          curPlayer.chungKhoans.push({symbol,gia, soLuong:soluongcp});\n      }\n      break;\n    default:\n      break;\n  }\n\n  curPlayer = tinhTong(curPlayer);\n\n  return { ...curPlayer};\n}\n\nfunction processCard(curPlayer, payload) {\n  const { cardTitle, cardVal } = curPlayer;\n\n  if (cardTitle === CashFlowUtils.sinhCon && curPlayer.soCon < 3) {\n    curPlayer.soCon = curPlayer.soCon + 1;\n  }\n  else if(cardTitle == CashFlowUtils.coHoi)\n    return processCardCoHoi(curPlayer, payload);\n\n  curPlayer = tinhTong(curPlayer);\n\n  return { ...curPlayer};\n}\n\n\nfunction tinhTong(curPlayer) {\n  let batDongSanDN = 0, thuNhapThuDong = 0, tongThuNhap = 0, chiPhiNuoiCon = 0, laiVayNganHang=0, tongChiPhi = 0, dongTien = 0;\n  curPlayer.batDongSans && curPlayer.batDongSans.map((bds, index) => {\n    batDongSanDN += bds.thuNhap;\n  })\n  curPlayer.congTys && curPlayer.congTys.map((congTy, index) => {\n    batDongSanDN += congTy.thuNhap;\n  })\n\n  thuNhapThuDong = batDongSanDN + curPlayer.laiNganHang +  curPlayer.laiCoPhan;\n\n  tongThuNhap = curPlayer.luong + thuNhapThuDong;\n\n  chiPhiNuoiCon = curPlayer.chiPhiNuoi1Con * curPlayer.soCon;\n\n  laiVayNganHang = curPlayer.vayNganHang * 0.1;\n\n  tongChiPhi = curPlayer.thue + curPlayer.traLaiVayMuaNha + curPlayer.traTienVayHoc + curPlayer.traTienVayMuaXe + curPlayer.traTienVayTinDung + curPlayer.chiPhiMuaSam + curPlayer.chiPhiKhac + laiVayNganHang + chiPhiNuoiCon + laiVayNganHang;\n\n  dongTien = tongThuNhap - tongChiPhi;\n\n  return { ...curPlayer, batDongSanDN, thuNhapThuDong, tongThuNhap, chiPhiNuoiCon, laiVayNganHang, tongChiPhi, dongTien};\n}\n\nfunction getPayCheck(curNumber, ran, dongTien){\n  let paycheck = 0, i=1, number = 0;\n\n  for (i=1; i<= ran; i++) {\n    number = (curNumber+i) % 24;\n    if (number===6 || number === 14 || number === 22)\n      paycheck += dongTien;\n  }\n\n  return paycheck;\n}\n\nexport default function cashFlowReducer(state = initialState, action) {\n  const {indexPlayer, players} = state;\n  let curPlayer = {};\n  let payload = {};\n  let ran =0 ;\n  switch (action.type) {\n    case types.RANDOM_NUMBER:\n      curPlayer = players[indexPlayer];\n      ran = action.ran;\n\n      curPlayer.ran = ran;\n\n      const paycheck = getPayCheck(curPlayer.number, ran, curPlayer.dongTien );\n      curPlayer.tienMat = curPlayer.tienMat + paycheck;\n\n      curPlayer.number = curPlayer.number + ran;\n\n      const cardContent = CashFlowUtils.getResultStep(curPlayer.number);\n      curPlayer.cardTitle = cardContent.type;\n      curPlayer.cardVal = cardContent.val;\n\n      curPlayer.showCardResult = 1;\n      return {\n        ...state,\n        players: players\n      }\n    case types.CARD_RESULT_OKCLICK:\n      curPlayer = players[indexPlayer];\n      payload = action.payload;\n      \n      curPlayer = processCard(curPlayer, payload);\n\n      // curPlayer.ran = ran;\n \n      players[indexPlayer] = curPlayer;\n\n      return {\n        ...state, players: players\n      }\n    case types.CARD_RESULT_SELLCLICK:\n        curPlayer = players[indexPlayer];\n        const { cardVal} = curPlayer;\n        const { gia,symbol} = cardVal;\n\n        payload = action.payload;\n        \n        const {soluongcp} =  payload;\n        let giaMoi = 0;\n        for(var i =0; i< curPlayer.chungKhoans.length;i++){\n          if(curPlayer.chungKhoans[i].symbol === symbol) {\n            console.log('CARD_RESULT_SELLCLICK symbol, soluongcp, curPlayer.chungKhoans[i].soLuong', symbol, soluongcp, curPlayer.chungKhoans[i].soLuong);\n            if(soluongcp > curPlayer.chungKhoans[i].soLuong){\n              toast.error('Số cổ phiếu bán không được lớn hơn số dư.');\n              break;\n            }\n            curPlayer.showCardResult = 0;\n            curPlayer.tienMat += soluongcp*gia;\n            curPlayer.chungKhoans[i] = {symbol, gia:curPlayer.chungKhoans[i].gia, soLuong:curPlayer.chungKhoans[i].soLuong - soluongcp};\n          }\n        }\n   \n        players[indexPlayer] = curPlayer;\n  \n        return {\n          ...state, players: players\n        }\n    case types.CARD_RESULT_IGNORECLICK:\n      curPlayer = players[indexPlayer];\n      curPlayer.showCardResult = 0;\n\n      players[indexPlayer] = curPlayer;\n\n      return {\n        ...state, players: players\n      }\n    default:\n      return state\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAtCA;AACA;AAwCA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AADA;AACA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AALA;AAAA;AAQA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAEA;AACA;AAvEA;AAyEA;;;;A","sourceRoot":""}