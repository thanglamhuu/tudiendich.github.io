{"version":3,"file":"static/webpack/static/development/pages/phat-am/trac-nghiem.js.54c432e7aca365f076cd.hot-update.js","sources":["webpack:///./components/hoctaphieuan/QuizComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {exercises,removeVietnameseTones} from './constantsPhatAm';\n\nconst QuizComponent = ({ exercises }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [correctCount, setCorrectCount] = useState(0); // Track the number of correct answers\n\n  // Sound arrays for correct and incorrect answers\n  const soundDung = [\n    '/static/sounds/d_anime-wow.mp3',\n    '/static/sounds/d_Bright_UI_.aac',\n    '/static/sounds/d_Bubble_Click.aac',\n    '/static/sounds/d_Coin_Collecting.aac',\n    '/static/sounds/d_CONCERT_CROWD_CLAP.mp3',\n    '/static/sounds/d_General_UI.aac',\n    '/static/sounds/d_Menu_Appear_Double_Bubble_.aac',\n    '/static/sounds/d_woooooaah.mp3',\n    '/static/sounds/d_wow.mp3',\n  ];\n  \n  const soundSai = [\n    '/static/sounds/s_AirHorn-DJ_Horns.mp3',\n    '/static/sounds/s_Alarm-Mid-High.aac',\n    '/static/sounds/s_AS_Synth_Ramp_Upl.aac',\n    '/static/sounds/s_babylaugh.mp3',\n    '/static/sounds/s_bad.mp3',\n    '/static/sounds/s_Cartoon_Boing_.aac',\n    '/static/sounds/s_fail.mp3',\n    '/static/sounds/s_laughing-man.mp3',\n    '/static/sounds/s_Meow_Farm_Game.aac',\n    '/static/sounds/s_Ni_Sound_Cartoon.aac',\n    '/static/sounds/s_Regular_Braam.mp3',\n    '/static/sounds/s_Vintage_Scream.mp3',\n    '/static/sounds/s_whip.mp3',\n  ];\n\n  const [audio, setAudio] = useState(null);\n\n  useEffect(() => {\n    // Initialize Audio only in the client-side when the question changes\n    const currentAudio = new Audio(exercises[currentIndex].mp3);\n    setAudio(currentAudio);\n\n    // Play the audio as soon as the question is changed or first loaded\n    currentAudio.play();\n\n    // Cleanup audio when the component is unmounted or when currentIndex changes\n    return () => {\n      currentAudio.pause();\n    };\n  }, [currentIndex, exercises]);\n\n  useEffect(() => {\n    // Reset state when the question changes\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n  }, [currentIndex]);\n\n  const handlePlayAudio = () => {\n    if (audio) {\n      audio.play();\n    }\n  };\n\n  const handleAnswerSelection = (answer) => {\n    setSelectedAnswer(answer);\n    setIsAnswered(true);\n\n    // Check if the selected answer is correct\n    if (answer === exercises[currentIndex].correctAnswer) {\n      setCorrectCount(correctCount + 1);\n      // Play a random sound for correct answer\n      const randomCorrectSound = soundDung[Math.floor(Math.random() * soundDung.length)];\n      new Audio(randomCorrectSound).play();\n    } else {\n      // Play a random sound for incorrect answer\n      const randomIncorrectSound = soundSai[Math.floor(Math.random() * soundSai.length)];\n      new Audio(randomIncorrectSound).play();\n    }\n  };\n\n  const handleNext = () => {\n    if (currentIndex < exercises.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const { choices, correctAnswer } = exercises[currentIndex];\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', maxWidth: '600px', margin: 'auto' }}>\n      <h2 style={{ color: '#007BFF', fontSize: '28px', textAlign: 'center' }}>Hãy chọn từ bạn nghe thấy</h2>\n      <button\n        onClick={handlePlayAudio}\n        style={{\n          padding: '12px 25px',\n          backgroundColor: '#007BFF',\n          color: '#fff',\n          borderRadius: '10px',\n          border: 'none',\n          fontSize: '16px',\n          cursor: 'pointer',\n          display: 'block',\n          margin: '20px auto',\n        }}\n      >\n        ▶️ Phát âm\n      </button>\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        {choices.map((choice, index) => (\n          <button\n            key={index}\n            onClick={() => handleAnswerSelection(choice)}\n            disabled={isAnswered}\n            style={{\n              padding: '12px 25px',\n              margin: '10px',\n              backgroundColor: selectedAnswer === choice ? (choice === correctAnswer ? 'green' : 'red') : '#f0f0f0',\n              color: selectedAnswer === choice ? 'white' : 'black',\n              borderRadius: '8px',\n              cursor: 'pointer',\n              fontSize: '16px',\n              border: 'none',\n            }}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n\n      {isAnswered && (\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n          <strong style={{ color: selectedAnswer === correctAnswer ? 'green' : 'red' }}>\n            {selectedAnswer === correctAnswer ? 'Bạn đã chọn đúng!' : 'Bạn đã chọn sai!'}\n          </strong>\n        </div>\n      )}\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <strong>Câu trả lời đúng: {correctCount}</strong>\n      </div>\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <button\n          onClick={handlePrevious}\n          disabled={currentIndex === 0}\n          style={{ padding: '10px 20px', marginRight: '10px', backgroundColor: '#ccc', borderRadius: '5px' }}\n        >\n          ◀️ Trước\n        </button>\n        <button\n          onClick={handleNext}\n          disabled={currentIndex === exercises.length - 1}\n          style={{ padding: '10px 20px', backgroundColor: '#ccc', borderRadius: '5px' }}\n        >\n          Sau ▶️\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default function App() {\n  return (\n    <div>\n      <QuizComponent exercises={exercises} />\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AACA;AADA;AAYA;AACA;AApBA;AAAA;AAAA;AACA;AAoCA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3FA;AAAA;AAAA;AA6FA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAJA;AADA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AACA;AACA;AAEA;AAAA;AAGA;;;;A","sourceRoot":""}