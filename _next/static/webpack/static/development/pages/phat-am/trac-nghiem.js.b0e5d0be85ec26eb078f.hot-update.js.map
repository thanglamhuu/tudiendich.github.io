{"version":3,"file":"static/webpack/static/development/pages/phat-am/trac-nghiem.js.b0e5d0be85ec26eb078f.hot-update.js","sources":["webpack:///./components/hoctaphieuan/QuizComponent.js","webpack:///./components/hoctaphieuan/constantsPhatAm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {exercises} from './constantsPhatAm';\n\nconst QuizComponent = ({ exercises }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswered, setIsAnswered] = useState(false);\n  const [correctCount, setCorrectCount] = useState(0); // Track the number of correct answers\n\n  // Sound arrays for correct and incorrect answers\n  const soundDung = [\n    '/static/sounds/anime-wow.mp3',\n    '/static/sounds/woooooaah.mp3',\n    '/static/sounds/wow.mp3',\n  ];\n\n  const soundSai = [\n    '/static/sounds/babylaugh.mp3',\n    '/static/sounds/bad.mp3',\n    '/static/sounds/fail.mp3',\n    '/static/sounds/laughing-man.mp3',\n    '/static/sounds/whip.mp3',\n  ];\n\n  const [audio, setAudio] = useState(null);\n\n  useEffect(() => {\n    // Initialize Audio only in the client-side when the question changes\n    const currentAudio = new Audio(exercises[currentIndex].mp3);\n    setAudio(currentAudio);\n\n    // Play the audio as soon as the question is changed or first loaded\n    currentAudio.play();\n\n    // Cleanup audio when the component is unmounted or when currentIndex changes\n    return () => {\n      currentAudio.pause();\n    };\n  }, [currentIndex, exercises]);\n\n  useEffect(() => {\n    // Reset state when the question changes\n    setSelectedAnswer(null);\n    setIsAnswered(false);\n  }, [currentIndex]);\n\n  const handlePlayAudio = () => {\n    if (audio) {\n      audio.play();\n    }\n  };\n\n  const handleAnswerSelection = (answer) => {\n    setSelectedAnswer(answer);\n    setIsAnswered(true);\n\n    // Check if the selected answer is correct\n    if (answer === exercises[currentIndex].correctAnswer) {\n      setCorrectCount(correctCount + 1);\n      // Play a random sound for correct answer\n      const randomCorrectSound = soundDung[Math.floor(Math.random() * soundDung.length)];\n      new Audio(randomCorrectSound).play();\n    } else {\n      // Play a random sound for incorrect answer\n      const randomIncorrectSound = soundSai[Math.floor(Math.random() * soundSai.length)];\n      new Audio(randomIncorrectSound).play();\n    }\n  };\n\n  const handleNext = () => {\n    if (currentIndex < exercises.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  const { choices, correctAnswer } = exercises[currentIndex];\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', maxWidth: '600px', margin: 'auto' }}>\n      <h2 style={{ color: '#007BFF', fontSize: '28px', textAlign: 'center' }}>Hãy chọn từ bạn nghe thấy</h2>\n      <button\n        onClick={handlePlayAudio}\n        style={{\n          padding: '12px 25px',\n          backgroundColor: '#007BFF',\n          color: '#fff',\n          borderRadius: '10px',\n          border: 'none',\n          fontSize: '16px',\n          cursor: 'pointer',\n          display: 'block',\n          margin: '20px auto',\n        }}\n      >\n        ▶️ Phát âm\n      </button>\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        {choices.map((choice, index) => (\n          <button\n            key={index}\n            onClick={() => handleAnswerSelection(choice)}\n            disabled={isAnswered}\n            style={{\n              padding: '12px 25px',\n              margin: '10px',\n              backgroundColor: selectedAnswer === choice ? (choice === correctAnswer ? 'green' : 'red') : '#f0f0f0',\n              color: selectedAnswer === choice ? 'white' : 'black',\n              borderRadius: '8px',\n              cursor: 'pointer',\n              fontSize: '16px',\n              border: 'none',\n            }}\n          >\n            {choice}\n          </button>\n        ))}\n      </div>\n\n      {isAnswered && (\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n          <strong style={{ color: selectedAnswer === correctAnswer ? 'green' : 'red' }}>\n            {selectedAnswer === correctAnswer ? 'Bạn đã chọn đúng!' : 'Bạn đã chọn sai!'}\n          </strong>\n        </div>\n      )}\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <strong>Câu trả lời đúng: {correctCount}</strong>\n      </div>\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <button\n          onClick={handlePrevious}\n          disabled={currentIndex === 0}\n          style={{ padding: '10px 20px', marginRight: '10px', backgroundColor: '#ccc', borderRadius: '5px' }}\n        >\n          ◀️ Trước\n        </button>\n        <button\n          onClick={handleNext}\n          disabled={currentIndex === exercises.length - 1}\n          style={{ padding: '10px 20px', backgroundColor: '#ccc', borderRadius: '5px' }}\n        >\n          Sau ▶️\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default function App() {\n  return (\n    <div>\n      <QuizComponent exercises={exercises} />\n    </div>\n  );\n}\n","import _ from 'lodash';\nexport const syllablesTable = [\n  [\"am\", \"ap\", \"ăm\", \"ăp\", \"âm\", \"âp\", \"em\", \"ep\", \"im\", \"ip\"],\n  [\"iêm\", \"yêm\", \"iêp\", \"om\", \"op\", \"ôm\", \"ôp\", \"ơm\", \"ơp\", \"um\"],\n  [\"up\", \"uôm\", \"ươm\", \"ươp\", \"an\", \"at\", \"ăn\", \"ăt\", \"ân\", \"ât\"],\n  [\"en\", \"et\", \"ên\", \"êt\", \"in\", \"it\", \"iên\", \"iêt\", \"yên\", \"yêt\"],\n  [\"on\", \"ot\", \"ôn\", \"ôt\", \"ơn\", \"ơt\", \"un\", \"ut\", \"ưt\", \"uôn\"],\n  [\"uôt\", \"ươn\", \"ươt\", \"ang\", \"ac\", \"ăng\", \"ăc\", \"âng\", \"âc\", \"eng\"],\n  [\"ec\", \"iêng\", \"yêng\", \"iêc\", \"ong\", \"oc\", \"ông\", \"ôc\", \"ung\", \"uc\"],\n  [\"ưng\", \"ưc\", \"uông\", \"uôc\", \"ương\", \"ươc\", \"anh\", \"ach\", \"ênh\", \"êch\"],\n  [\"inh\", \"ich\", \"ai\", \"ay\", \"oi\", \"ây\", \"ôi\", \"ơi\", \"ui\", \"ưi\"],\n  [\"uôi\", \"ươi\", \"ao\", \"eo\", \"au\", \"âu\", \"êu\", \"iu\", \"iêu\", \"yêu\"],\n  [\"ưu\", \"ươu\", \"oa\", \"oe\", \"uê\", \"ươ\", \"uy\", \"uya\", \"oam\", \"oăm\"],\n  [\"oan\", \"oat\", \"oăn\", \"oăt\", \"uân\", \"uât\", \"oen\", \"oet\", \"uyên\", \"uyêt\"],\n  [\"uyn\", \"uyt\", \"oang\", \"oac\", \"oăng\", \"oăc\", \"oanh\", \"oach\", \"uênh\", \"uêch\"],\n  [\"uynh\", \"uych\", \"oai\", \"oay\", \"uây\", \"oong\", \"ooc\", \"uyp\", \"oeo\", \"uêu\"],\n  [\"oao\", \"oap\", \"uyu\", \"uâng\", \"\", \"\", \"\", \"\", \"\", \"\"]\n];\n\nexport const exercises = [\n  { id: 1, mp3: '/static/phatam/01aip.mp3', choices: ['ip', 'ap', 'iêm', 'yêm'], correctAnswer: 'ip' },\n  { id: 2, mp3: '/static/phatam/10ayeu.mp3', choices: ['yêu', 'ap', 'iêm', 'yêm'], correctAnswer: 'yêu' },\n  { id: 3, mp3: '/static/phatam/015am.mp3', choices: ['âm', 'ap', 'iêm', 'yêm'], correctAnswer: 'âm' },\n]\n\n// Hàm chuyển âm sang tiếng Việt không dấu\nexport function removeVietnameseTones (str) {\n  return str\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .replace(/đ/g, 'd')\n    .replace(/Đ/g, 'D');\n};\n\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AACA;AADA;AAMA;AACA;AAdA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA;AAAA;AAAA;AA+EA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAiBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAJA;AADA;AAsBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AACA;AACA;AAEA;AAAA;AAGA;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAKA;AAAA;;;;A","sourceRoot":""}