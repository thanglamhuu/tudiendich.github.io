{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.094593f529409451ccf1.hot-update.js","sources":["webpack:///./components/tuDien/ChuHan.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport * as GA from '../../utils/analystics';\r\nimport{\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n} from 'reactstrap';\r\nimport { chuanHoaChinneseNoSign, getSoundFile } from '../../utils/utils';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nconst BreakLine = styled.div`\r\n  display:none;\r\n  display:block;\r\n  width:100%;\r\n  height:0;\r\n`;\r\nconst AudioD = styled.audio`\r\n  max-width: 220px;\r\n  padding: 2px 2px;\r\n`;\r\nconst BigText = styled.span`\r\n  font-family: 'KaiTi', \"Hiragino Sans GB\", \"Microsoft YaHei\",\"WenQuanYi Micro Hei\", sans-serif;\r\n  font-size: 300%;\r\n`;\r\n\r\nconst IframeI = styled.iframe`\r\n  width: 100%;\r\n  line-height: 1;\r\n  border-radius: 0.2rem;\r\n  min-height: 400px;\r\n`;\r\n\r\n\r\nfunction getDisplayHanViet(mean) {\r\n  if(mean) {\r\n    mean = mean.split(',');\r\n    if (mean.length === 0) {\r\n      mean = '';\r\n    } else if (mean.length === 1) {\r\n      mean = mean[0];\r\n    } else {\r\n      mean = `${mean[0]} ...`;\r\n    }\r\n   }\r\n   return mean;\r\n}\r\n\r\nexport default class ChuHan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      modal: false,\r\n      nghiaViet: this.props.nghiaViet,\r\n      bacKinh: this.props.bacKinh,\r\n    };\r\n    this.onHtmlChangeNghiaViet = this.onHtmlChangeNghiaViet.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.nghiaButtonClick = this.nghiaButtonClick.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  onHtmlChangeNghiaViet(e) {\r\n    let nghiaViet = e.target.value;\r\n\r\n    if(nghiaViet.indexOf('\\n')>= 0) {\r\n      this.setState({modal: !this.state.modal});\r\n    } else {\r\n      this.setState({ nghiaViet: nghiaViet });\r\n      this.props.updateNghia(this.props.id, nghiaViet);\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n    });\r\n    GA.trackEvent('ChuHan', 'Han', this.props.chinesse);\r\n  }\r\n\r\n  handleClick() {\r\n    const mp3Link = getSoundFile(this.props.bacKinh);\r\n    const { bacKinh } = this.bacKinh;\r\n    const au = new Audio(`http://tv.nhidonghocphat.com/BasicSound/${mp3Link}`);\r\n    au.play();\r\n    GA.trackEvent('ChuHan', 'BacKinh', this.props.bacKinh);\r\n  }\r\n\r\n  nghiaButtonClick(nghia) {\r\n    this.setState({ nghiaViet: nghia});\r\n    this.props.updateNghia(this.props.id, nghia);\r\n    GA.trackEvent('ChuHan', 'BacKinh', this.props.bacKinh);\r\n  }\r\n\r\n  render() {\r\n    try {\r\n      let {\r\n        id,\r\n        chinesse,\r\n        hanViet,\r\n        bacKinh,\r\n        nghiaViet,\r\n        dot,\r\n      } = this.props;\r\n\r\n      if(dot) {\r\n        nghiaViet = `${nghiaViet}${dot} `;\r\n      }\r\n\r\n      let {nghias} = this.props;\r\n\r\n      const { modal} = this.state;\r\n\r\n      if (chinesse === '\\n') {\r\n        return (<BreakLine />);\r\n      }\r\n      if (chinesse.includes('.mp3')) {\r\n        return (<AudioD className=\"no-print\" controls loop src={`https://tv.nhidonghocphat.com/${chinesse}`} type=\"audio/mp3\" />);\r\n      }\r\n      if (chinesse === '#B') {\r\n        return ('');\r\n      }\r\n\r\n      const bkCom = bacKinh && (\r\n        <Row style={{ padding: 1, margin: 1 }}>\r\n          <button className=\"btnBacKinh\" onClick={this.handleClick}>s{bacKinh}</button>\r\n        </Row>);\r\n\r\n      let nghiaButtons = '', i = 0;\r\n      if (nghias){\r\n        nghias = `${nghias},${hanViet}`;\r\n\r\n        nghiaButtons = nghias.split(',').map(item => {\r\n          return (\r\n            <button key={i++} className=\"btnBacKinh\" onClick={() => this.nghiaButtonClick(item)}>{item}</button>\r\n          );\r\n        });\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          <Card key={`${id}`} className=\"chuHanPrint\"  style={{ borderLeftWidth: 0, borderRightWidth: 0 }}>\r\n            <CardBody style={{ padding: 0 }}>\r\n              <CardHeader style={{ padding: 0 }}>\r\n                g<button className=\"btnChuHan\" id={`btnChuHan${id}`} onClick={this.toggle}>{chinesse}</button>\r\n              </CardHeader>\r\n              <Row className=\"lblGray\" style={{ padding: 1, margin: 1, fontSize: 18 }}><small>{getDisplayHanViet(hanViet)}</small></Row>\r\n              <Row style={{ padding: 1, margin: 1, fontSize: 18 }}><small>{nghiaViet}</small></Row>\r\n              {bkCom}\r\n            </CardBody>\r\n          </Card>\r\n          <Modal isOpen={modal} toggle={this.toggle} className={this.props.className}>\r\n            <ModalHeader toggle={this.toggle}>{chuanHoaChinneseNoSign(chinesse)}</ModalHeader>\r\n            <ModalBody>\r\n              {/* <Col><BigText>{chinesse}</BigText></Col> */}\r\n              Chọn lại nghĩa và chỉnh nếu cần\r\n              {nghiaButtons}\r\n              Nghĩa được chọn để dịch là (Enter để đóng)\r\n              <TextareaAutosize\r\n                className=\"txtAutoSize\"\r\n                id=\"inputChuHan\"\r\n                placeholder=\"Nghĩa Việt\"\r\n                value={nghiaViet}\r\n                onChange={this.onHtmlChangeNghiaViet}\r\n              /><br />\r\n              <h3>Nghĩa chi tiết</h3>\r\n              <IframeI\r\n                src={`https://tv.nhidonghocphat.com/dictHtmls/${chuanHoaChinneseNoSign(chinesse)}.htm`}\r\n              />\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    } catch (e) {\r\n      console.log('error', e);\r\n      return (<Error title=\"Chữ Hán\" content={e+''} />);\r\n    }\r\n  }\r\n}\r\n\r\nChuHan.propTypes = {\r\n  error: PropTypes.string,\r\n  chinesse: PropTypes.string,\r\n  chinessNoSign: PropTypes.string,\r\n  hanViet: PropTypes.string,\r\n  bacKinh: PropTypes.string,\r\n  id: PropTypes.number,\r\n  updateNghia: PropTypes.func,\r\n};\r\n\r\nChuHan.defaultProps = {\r\n  error: null,\r\n  chinesse: '',\r\n  chinessNoSign: '',\r\n  hanViet: '',\r\n  bacKinh: '',\r\n  id: '',\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAUA;AACA;AAEA;AAMA;AAIA;AAKA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AAbA;AAAA;AACA;AAiBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AALA;AASA;AADA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAlIA;AACA;AADA;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;A","sourceRoot":""}